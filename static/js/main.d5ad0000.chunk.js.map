{"version":3,"sources":["../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","logo.svg","components/Container/Container.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","components/Body/Body.jsx","components/WorldMap/constants.js","components/WorldMap/WorldMap.jsx","components/WorldMap/utils.js","components/Logo/Logo.jsx","App.jsx","index.js"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Container","children","cssClass","className","join","trim","Footer","Header","Body","featureLayer","FeatureLayer","url","map","ArcgisMap","basemap","ground","view","SceneView","container","scale","center","template","PopupTemplate","title","content","type","fieldInfos","fieldName","label","format","dateFormat","basicSymbol","SimpleMarkerSymbol","color","size","outline","width","WorldMap","mapContainer","useRef","esriConfig","apiKey","popupTemplate","count","query","TopFeaturesQuery","topFilter","TopFilter","topCount","groupByFields","orderByFields","outFields","returnGeometry","num","graphics","useMemo","layer","queryTopFeatures","getTopFeatures","useEffect","current","result","features","forEach","feature","symbol","symbolSize","attributes","mag","addSymbolToFeature","newFeatures","removeAll","addMany","updateViewGraphics","ref","Logo","href","src","push","getCssClassByType","alt","App","logo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5ad0000.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 698;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './Container.scss'\r\n\r\nconst Container = ({children, className}) => {\r\n    const cssClass = ['container', className];\r\n    return (\r\n        <div className={cssClass.join(' ').trim()}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react';\r\nimport './Footer.scss';\r\nimport Container from '../Container/Container';\r\n\r\nconst Footer = ({children}) => {\r\n    return (\r\n        <footer className=\"site-footer\">\r\n            <Container className=\"\">\r\n                {children}\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Header.scss'\r\nimport Container from '../Container/Container';\r\n\r\nconst Header = ({children}) => {\r\n    return (\r\n        <header className=\"site-header\">\r\n            <Container className=\"site-header__container\">\r\n                {children}\r\n            </Container>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport './Body.scss'\r\nimport Container from '../Container/Container'\r\n\r\nconst Body = ({children}) => {\r\n    return (\r\n        <main className=\"site-main\">\r\n            <Container className=\"site-main__container\">\r\n                {children}\r\n            </Container>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","import ArcgisMap from '@arcgis/core/Map';\r\nimport SceneView from '@arcgis/core/views/SceneView';\r\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\r\nimport PopupTemplate from '@arcgis/core/PopupTemplate';\r\nimport SimpleMarkerSymbol from '@arcgis/core/symbols/SimpleMarkerSymbol';\r\n\r\n\r\nexport const apiKey = 'AAPK6e9b15a0536a425b8e70f0115009a50fp9Wvoyw2rUtoHa3tBKycWIpYRq95VIc9Lha1FTrLVSLa8oOi0ZT5KoQ10_iZUL-j';\r\n\r\nexport const featureLayer = new FeatureLayer({\r\n    url: 'https://services3.arcgis.com/GVgbJbqm8hXASVYi/ArcGIS/rest/services/2020_Earthquakes/FeatureServer/0',\r\n});\r\n\r\nexport const map = new ArcgisMap({\r\n    basemap: 'dark-gray-vector',\r\n    ground: 'world-elevation',\r\n})\r\n\r\nexport const view = new SceneView({\r\n    container: null,\r\n    map: map,\r\n    scale: 50000000, // Sets the initial scale to 1:50,000,000\r\n    center: [-101.17, 21.78]\r\n})\r\n\r\nexport const template = new PopupTemplate({\r\n    title: 'Earthquake in {place}',\r\n    content: [\r\n        {\r\n            type: 'fields',\r\n            fieldInfos: [\r\n                {\r\n                    fieldName: 'updated',\r\n                    label: 'Incident time',\r\n                    format: {\r\n                        dateFormat: \"day-short-month-year\"\r\n                    }\r\n                },{\r\n                    fieldName: 'mag',\r\n                    label: 'Magnitude'\r\n                },{\r\n                    fieldName: 'status',\r\n                    label: 'Status'\r\n                },{\r\n                    fieldName: 'alert',\r\n                    label: 'Alert type'\r\n                },{\r\n                    fieldName: 'gap',\r\n                    label: 'Gap'\r\n                },{\r\n                    fieldName: 'sig',\r\n                    label: 'Signature'\r\n                },{\r\n                    fieldName: 'url',\r\n                    label: 'More info'\r\n                },\r\n            ]\r\n            \r\n        }\r\n    ]\r\n})\r\n\r\nexport const basicSymbol = new SimpleMarkerSymbol({\r\n    color: [ 52, 160, 164 ],\r\n    size: \"8px\",  // pixels\r\n    outline: {  // autocasts as new SimpleLineSymbol()\r\n        color: [ 255, 255, 255 ],\r\n        width: 1  // points\r\n    }\r\n})\r\n\r\nexport const featuresCount = 10;","import {React, useEffect, useMemo, useRef} from 'react';\r\nimport './WorldMap.scss';\r\n\r\nimport esriConfig from '@arcgis/core/config';\r\n\r\nimport {\r\n    apiKey,\r\n    featureLayer,\r\n    view,\r\n    template,\r\n    basicSymbol,\r\n    featuresCount\r\n} from './constants'\r\n\r\nimport {\r\n    createTopEarthQuakesQuery,\r\n    getTopFeatures,\r\n    updateViewGraphics,\r\n    addSymbolToFeature,\r\n} from './utils'\r\n\r\nconst WorldMap = ({className}) => {\r\n    const cssClass = ['world-map', className];\r\n    const mapContainer = useRef(null);\r\n\r\n    esriConfig.apiKey = apiKey;\r\n    featureLayer.popupTemplate = template;\r\n\r\n    const query = createTopEarthQuakesQuery(featuresCount);\r\n\r\n    const graphics = useMemo(() => getTopFeatures(featureLayer, query), [query]);\r\n\r\n    useEffect(()=>{\r\n        view.container = mapContainer.current.id;\r\n    }, [mapContainer])\r\n\r\n    useEffect( () => {\r\n        graphics.then((result) => {\r\n            const  features= result.features;\r\n           \r\n            features.forEach((feature)=>{\r\n                addSymbolToFeature(feature, basicSymbol)\r\n            })\r\n\r\n            updateViewGraphics(view, features)\r\n        })\r\n    }, [graphics, query])\r\n\r\n    return (\r\n        <div className={cssClass.join(' ').trim()}>\r\n            <div className=\"world-map__view\" ref={mapContainer} id=\"world-map\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldMap;\r\n","import TopFilter from '@arcgis/core/rest/support/TopFilter';\r\nimport TopFeaturesQuery from '@arcgis/core/rest/support/TopFeaturesQuery'\r\n\r\nexport const createTopEarthQuakesQuery = (count) => {\r\n    return new TopFeaturesQuery({\r\n        topFilter: new TopFilter({\r\n            topCount: 1,\r\n            groupByFields: ['ObjectId'],\r\n            orderByFields: ['mag'],\r\n          }),\r\n        orderByFields: ['mag DESC'],\r\n        outFields: ['*'],\r\n        returnGeometry: true,\r\n        num: count,\r\n    })\r\n}\r\n\r\nexport const getTopFeatures = (layer, query) => {\r\n    return  layer.queryTopFeatures(query)\r\n}\r\n\r\nexport const updateViewGraphics = (view, newFeatures) => {\r\n    view.graphics.removeAll();\r\n    view.graphics.addMany(newFeatures);\r\n}\r\n\r\nexport const addSymbolToFeature = (feature, symbol) => {\r\n    const symbolSize = +feature.attributes.mag * 2\r\n    feature.symbol = symbol\r\n    feature.symbol.size = (symbolSize > 4) ? symbolSize : 4;\r\n}","import React from 'react';\r\nimport './Logo.scss'\r\n\r\nconst getCssClassByType = (type) => {\r\n    return  (type ? `logo--${type}` : '');\r\n}\r\n\r\nconst Logo = ({className, label, href, type, src}) => {\r\n    const cssClass = ['logo', className];\r\n    \r\n    cssClass.push(getCssClassByType(type));\r\n\r\n    return (\r\n        <a className={cssClass.join(' ').trim()} href={href}>\r\n            <img className=\"logo__img\" src={src} alt=\"\"/>\r\n            <span className=\"logo__label\">{label}</span>\r\n        </a>\r\n    )\r\n}\r\n\r\n\r\nexport default Logo;","import logo from './logo.svg';\r\nimport './App.scss';\r\n\r\nimport Footer from './components/Footer/Footer';\r\nimport Header from './components/Header/Header';\r\nimport Body from './components/Body/Body';\r\nimport WorldMap  from \"./components/WorldMap/WorldMap\";\r\nimport Logo from './components/Logo/Logo';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header>\r\n        <Logo\r\n          src = {logo}\r\n          label = \"ArcGIS Test\"\r\n        />\r\n      </Header>\r\n      <Body>\r\n        <WorldMap className=\"main-map\"/>\r\n      </Body>\r\n      <Footer><small>By Petr Khalikov</small></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}